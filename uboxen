#!/bin/bash -x

# get a module from puppet-forge
function forge()
{
  AUTHOR=$1
  MODULE=$2
  UPGRADED=$CACHE/{$AUTHOR}_{$MODULE}.lastupgrade
  
  if [ ! -d /etc/puppet/modules/$MODULE ]; then
    sudo puppet module install $AUTHOR/$MODULE
  else
    if [ ! -f $UPGRADED ]; then
      sudo puppet module upgrade $AUTHOR/$MODULE
      touch $UPGRADED
    fi
  fi
}

function gh()
{
  AUTHOR=$1
  REPO=$2
  MOD=$3
  git clone https://github.com/$AUTHOR/$REPO.git /etc/puppet/modules/$MOD
}

# support for etckeeper
function etckeep()
{
  MSG=$1
  [ -x /usr/bin/etckeeper ] && sudo etckeeper commit "$MSG" 
}

CACHE=/tmp/uboxen
[ ! -d $CACHE ] && mkdir $CACHE

echo -n "Setup Mercurial? (Y/n): "
read -n 1 hgsetup
hgsetup="$(echo $hgsetup | tr '[:upper:]' '[:lower:]')"
if [ "$hgsetup" = "" ] || [ "$hgsetup" = "y" ]; then
  FACTER_HGLOGIN=$(printenv FACTER_HGLOGIN)
  if [ "$FACTER_HGLOGIN" = "" ]; then
    echo -n "Please enter your Mercurial username: "
    read FACTER_HGLOGIN
    export FACTER_HGLOGIN
  fi
  FACTER_HGEMAIL=$(printenv FACTER_HGEMAIL)
  if [ "$FACTER_HGEMAIL" = "" ]; then
    echo -n "Please enter your Mercurial e-mail: "
    read FACTER_HGEMAIL
    export FACTER_HGEMAIL
  fi
fi

echo -n "Setup Github? (Y/n): "
read -n 1 gitsetup
gitsetup="$(echo $gitsetup | tr '[:upper:]' '[:lower:]')"
if [ "$gitsetup" = "" ] || [ "$gitsetup" = "y" ]; then
  FACTER_GITLOGIN=$(printenv FACTER_GITLOGIN)
  if [ "$FACTER_GITLOGIN" = "" ]; then
    echo -n "Please enter your Mercurial username: "
    read FACTER_GITLOGIN
    export FACTER_GITLOGIN
  fi
  FACTER_GITEMAIL=$(printenv FACTER_GITEMAIL)
  if [ "$FACTER_GITEMAIL" = "" ]; then
    echo -n "Please enter your Mercurial e-mail: "
    read FACTER_GITEMAIL
    export FACTER_GITEMAIL
  fi
fi

forge puppetlabs stdlib
forge puppetlabs inifile
forge puppetlabs apt 
forge puppetlabs vcsrepo 
forge puppetlabs concat 
forge saz sudo
forge thomasvandoren etckeeper
forge garethr docker 
forge willdurand composer
forge puppetlabs mongodb 
forge nodes php

MYPATH=$(dirname $0)

etckeep "Before uBoxen run"
#sudo puppet apply $MYPATH/uboxen.pp 
sudo puppet apply /etc/puppet/manifests/uboxen.pp 
etckeep "After uBoxen run"

# Clean module upgrade files
sudo puppet resource tidy $CACHE age=1m 


exit 0
